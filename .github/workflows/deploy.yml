name: Deploy to VPS

on:
  workflow_dispatch:
  push:
    branches: [ "staging", "main" ]

env:
  # Use for multi-branch deployment
  DEPLOY_ENV: ${{ github.head_ref || github.ref_name }}
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  REPO_NAME: ${{ github.repository }}

jobs:

  deploy:
    runs-on: self-hosted
    environment: 'production'
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DEPLOYMENT_VPS_HOST }}
          username: ${{ secrets.DEPLOYMENT_VPS_USERNAME }}
          key: ${{ secrets.DEPLOYMENT_VPS_SSH_KEY }}
          port: ${{ secrets.DEPLOYMENT_VPS_PORT }}
          timeout: 180s
          script: |
            echo "Connected to VPS successfully!"
            sleep 10s
            echo "exporing variables and env variables"
            export DEPLOY_ENV=${{ env.DEPLOY_ENV }}
            export REPO_NAME=${{ env.REPO_NAME }}
            export LETSENCRYPT_DEFAULT_EMAIL=${{ secrets.LETSENCRYPT_DEFAULT_EMAIL }}
            export OTEL_VERSION_TAG=${{ vars.OTEL_VERSION_TAG }}
            export MINIO_VERSION_TAG=${{ vars.MINIO_VERSION_TAG }}
            export POSTGRES_VERSION_TAG=${{ vars.POSTGRES_VERSION_TAG }}
            export RABBITMQ_VERSION_TAG=${{ vars.RABBITMQ_VERSION_TAG }}
            export NGINX_PROXY_VERSION_TAG=${{ vars.NGINX_PROXY_VERSION_TAG }}
            export ACME_COMPANION_VERSION_TAG=${{ vars.ACME_COMPANION_VERSION_TAG }}
            export S3_VIRTUAL_HOST=${{ secrets.S3_VIRTUAL_HOST }}
            export S3_VIRTUAL_PORT=${{ secrets.S3_VIRTUAL_PORT }}
            export RABBITMQ_VIRTUAL_HOST=${{ secrets.RABBITMQ_VIRTUAL_HOST }}
            export RABBITMQ_VIRTUAL_PORT=${{ secrets.RABBITMQ_VIRTUAL_PORT }}
            export OTEL_VIRTUAL_HOST=${{ secrets.OTEL_VIRTUAL_HOST }}
            export OTEL_VIRTUAL_PORT=${{ secrets.OTEL_VIRTUAL_PORT }}
            export MLFLOW_VIRTUAL_HOST=${{ secrets.MLFLOW_VIRTUAL_HOST }}
            export MLFLOW_VIRTUAL_PORT=${{ secrets.MLFLOW_VIRTUAL_PORT }}
            export RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
            export RABBITMQ_DEFAULT_PASSWORD=${{ secrets.RABBITMQ_DEFAULT_PASSWORD }}
            export RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}
            export RABBITMQ_API_PORT=${{ secrets.RABBITMQ_API_PORT }}
            export PG_USER=${{ secrets.PG_USER }}
            export PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            export PG_DATABASE=${{ vars.PG_DATABASE }}
            export PG_PORT=${{ secrets.PG_PORT }}
            export PG_MLFLOW_USER=${{ secrets.PG_MLFLOW_USER }}
            export PG_MLFLOW_PASSWORD=${{ secrets.PG_MLFLOW_PASSWORD }}
            export PG_MLFLOW_DATABASE=${{ vars.PG_MLFLOW_DATABASE }}
            export PG_CELERY_USER=${{ secrets.PG_CELERY_USER }}
            export PG_CELERY_PASSWORD=${{ secrets.PG_CELERY_PASSWORD }}
            export PG_CELERY_DATABASE=${{ vars.PG_CELERY_DATABASE }}
            export OTEL_USER=${{ secrets.OTEL_USER }}
            export OTEL_PASSWORD=${{ secrets.OTEL_PASSWORD }}
            export MLFLOW_PORT=${{ secrets.MLFLOW_PORT }}
            export MLFLOW_BUCKET_NAME=${{ vars.MLFLOW_BUCKET_NAME }}
            export MLFLOW_S3_IGNORE_TLS=${{ vars.MLFLOW_S3_IGNORE_TLS }}
            export DVC_BUCKET_NAME=${{ vars.DVC_BUCKET_NAME }}
            export CELERY_DATA_HOLDER_BUCKET_NAME=${{ vars.CELERY_DATA_HOLDER_BUCKET_NAME }}
            export MINIO_PORT=${{ secrets.MINIO_PORT }}
            export MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
            export MINIO_SECRET_ACCESS_KEY=${{ secrets.MINIO_SECRET_KEY }}
            export MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}
            export MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}
            export MINIO_CONSOLE_ADDRESS=${{ vars.MINIO_CONSOLE_ADDRESS }}
            export GRAFANA_PORT=${{ secrets.GF_PORT }}
            export GF_USER=${{ secrets.GF_USER }}
            export GF_PASSWORD=${{ secrets.GF_PASSWORD }}
            export GF_PATHS_DATA=${{ vars.GF_PATHS_DATA }}
            export ENABLE_LOGS_OTELCOL=${{ vars.ENABLE_LOGS_OTELCOL }}
            wget https://raw.githubusercontent.com/$REPO_NAME/$DEPLOY_ENV/docker-compose.yaml -O ~/docker-compose.yaml
            wget https://raw.githubusercontent.com/$REPO_NAME/$DEPLOY_ENV/Dockerfile.mlflow -O ~/Dockerfile.mlflow
            docker compose pull
            docker compose build mlflow-server
            docker compose up -d --no-build
            echo "Cleaning up..."
            rm ~/docker-compose.yaml
            echo "Deployment to VPS successful!"

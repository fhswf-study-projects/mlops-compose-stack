name: Deploy to VPS

on:
  workflow_call:

env:
  # Use for multi-branch deployment
  DEPLOY_ENV: ${{ github.head_ref || github.ref_name }}
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  REPO_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: self-hosted
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DEPLOYMENT_VPS_HOST }}
          username: ${{ secrets.DEPLOYMENT_VPS_USERNAME }}
          key: ${{ secrets.DEPLOYMENT_VPS_SSH_KEY }}
          port: ${{ secrets.DEPLOYMENT_VPS_PORT }}
          timeout: 180s
          script: |
            echo "Connected to VPS successfully!"
            sleep 10s
            echo "Exporting environment variables and secrets"
            export DEPLOY_ENV=${{ env.DEPLOY_ENV }}
            export LETSENCRYPT_DEFAULT_EMAIL=${{ secrets.LETSENCRYPT_DEFAULT_EMAIL }}
            export OTEL_VERSION_TAG=${{ vars.OTEL_VERSION_TAG }}
            export MINIO_VERSION_TAG=${{ vars.MINIO_VERSION_TAG }}
            export POSTGRES_VERSION_TAG=${{ vars.POSTGRES_VERSION_TAG }}
            export RABBITMQ_VERSION_TAG=${{ vars.RABBITMQ_VERSION_TAG }}
            export NGINX_PROXY_VERSION_TAG=${{ vars.NGINX_PROXY_VERSION_TAG }}
            export ACME_COMPANION_VERSION_TAG=${{ vars.ACME_COMPANION_VERSION_TAG }}
            export S3_ENDPOINT_URL=${{ vars.S3_ENDPOINT_URL }}
            export MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
            export MINIO_SECRET_ACCESS_KEY=${{ secrets.MINIO_SECRET_KEY }}
            export MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}
            export MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}
            export RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
            export RABBITMQ_DEFAULT_PASSWORD=${{ secrets.RABBITMQ_DEFAULT_PASSWORD }}
            export OTEL_USER=${{ secrets.OTEL_USER }}
            export OTEL_PASSWORD=${{ secrets.OTEL_PASSWORD }}
            export MLFLOW_S3_IGNORE_TLS=${{ vars.MLFLOW_S3_IGNORE_TLS }}
            export MLFLOW_BUCKET_NAME=${{ vars.MLFLOW_BUCKET_NAME }}
            export MLFLOW_TRACKING_URI=${{ vars.MLFLOW_TRACKING_URI }}
            export PG_MLFLOW_USER=${{ secrets.PG_MLFLOW_USER }}
            export PG_MLFLOW_PASSWORD=${{ secrets.PG_MLFLOW_PASSWORD }}
            export PG_MLFLOW_DATABASE=${{ vars.PG_MLFLOW_DATABASE }}
            export PG_USER=${{ secrets.PG_USER }}
            export PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            export PG_DATABASE=${{ vars.PG_DATABASE }}
            export PG_CELERY_USER=${{ secrets.PG_CELERY_USER }}
            export PG_CELERY_PASSWORD=${{ secrets.PG_CELERY_PASSWORD }}
            export PG_CELERY_DATABASE=${{ vars.PG_CELERY_DATABASE }}
            export DVC_BUCKET_NAME=${{ vars.DVC_BUCKET_NAME }}
            export CELERY_DATA_HOLDER_BUCKET_NAME=${{ vars.CELERY_DATA_HOLDER_BUCKET_NAME }}
            export GF_USER=${{ secrets.GF_USER }}
            export GF_PASSWORD=${{ secrets.GF_PASSWORD }}
            export CELERY_BACKEND_CONNECTION=${{ secrets.CELERY_BACKEND_CONNECTION }}
            export CELERY_BROKER_CONNECTION=${{ secrets.CELERY_BROKER_CONNECTION }}
            export CELERY_DEFAULT_QUEUE=${{ vars.CELERY_DEFAULT_QUEUE }}
            export OTEL_VIRTUAL_HOST=${{ secrets.OTEL_VIRTUAL_HOST }}
            export S3_VIRTUAL_HOST=${{ secrets.S3_VIRTUAL_HOST }}
            export RABBITMQ_VIRTUAL_HOST=${{ secrets.RABBITMQ_VIRTUAL_HOST }}
            export FASTAPI_VIRTUAL_HOST=${{ secrets.FASTAPI_VIRTUAL_HOST }}
            export STREAMLIT_VIRTUAL_HOST=${{ secrets.STREAMLIT_VIRTUAL_HOST }}
            export MLFLOW_VIRTUAL_HOST=${{ secrets.MLFLOW_VIRTUAL_HOST }}
            export API_BASE_URL=${{ vars.API_BASE_URL }}
            export API_TOKEN=${{ secrets.API_TOKEN }}
            export SWAGGER_DOCS_BASIC_AUTH_PASSWORD=${{ secrets.SWAGGER_DOCS_BASIC_AUTH_PASSWORD }}
            export SWAGGER_DOCS_BASIC_AUTH_USERNAME=${{ secrets.SWAGGER_DOCS_BASIC_AUTH_USERNAME }}
            export FASTAPI_OTEL_SERVICE_NAME=${{ vars.FASTAPI_OTEL_SERVICE_NAME }}
            export STREAMLIT_OTEL_SERVICE_NAME=${{ vars.STREAMLIT_OTEL_SERVICE_NAME }}
            export CELERY_OTEL_SERVICE_NAME=${{ vars.CELERY_OTEL_SERVICE_NAME }}
            export OTEL_EXPORTER_OTLP_ENDPOINT=${{ vars.OTEL_EXPORTER_OTLP_ENDPOINT }}
            export OTEL_PYTHON_LOG_LEVEL=${{ vars.OTEL_PYTHON_LOG_LEVEL }}
            export OTEL_PYTHON_LOG_CORRELATION=${{ vars.OTEL_PYTHON_LOG_CORRELATION }}
            export OTEL_METRIC_EXPORT_INTERVAL=${{ vars.OTEL_METRIC_EXPORT_INTERVAL }}
            export OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=${{ vars.OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED }}
            echo "Getting containers up and running"
            git clone -b ${{ env.DEPLOY_ENV }} --single-branch https://github.com/${{ env.REPO_NAME }}.git
            cd mlops-compose-stack
            git pull
            docker compose -f compose.yaml -f compose.deploy.yaml pull -q
            docker compose -f compose.yaml -f compose.deploy.yaml up -d --no-build
            echo "Cleaning up..."
            docker image prune -f
            cd ~
            rm -rf mlops-compose-stack
            echo "Deployment to VPS successful!"
